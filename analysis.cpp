#include "analysis.h"

std::atomic<int> counter(0);

void CorrelationCoefficients128(std::array<Vector128, 128> &matrix, std::array<double, 8128>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 127; ++i)
        for(unsigned j = (i+1); j < 128; ++j)
            data[index++] = Pearson128(matrix[i], matrix[j]);
}

void CorrelationCoefficients256(std::array<Vector256, 256> &matrix, std::array<double, 32640>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 255; ++i)
        for(unsigned j = (i+1); j < 256; ++j)
            data[index++] = Pearson256(matrix[i], matrix[j]);
}

void CorrelationCoefficients512(std::array<Vector512, 512> &matrix, std::array<double, 130816>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 511; ++i)
        for(unsigned j = (i+1); j < 512; ++j)
            data[index++] = Pearson512(matrix[i], matrix[j]);
}

int CorrelationCoefficients1024(std::array<Vector1024, 512> &matrix, double* data, int index)
{
    for(unsigned i = 0; i < 511; ++i)
        for(unsigned j = (i+1); j < 512; ++j)
            data[index++] = Pearson1024(matrix[i], matrix[j]);

    return index;
}

void CorrelationCoefficients128Threaded(std::array<Vector128, 128> &matrix, std::array<double, 8128>& data)
{
    std::array<unsigned, 127> startIndex = {0, 127, 253, 378, 502, 625, 747, 868, 988, 1107, 1225, 1342, 1458, 1573, 1687, 1800, 1912, 2023, 2133, 2242, 2350, 2457, 2563, 2668, 2772, 2875, 2977, 3078, 3178, 3277, 3375, 3472, 3568, 3663, 3757, 3850, 3942, 4033, 4123, 4212, 4300, 4387, 4473, 4558, 4642, 4725, 4807, 4888, 4968, 5047, 5125, 5202, 5278, 5353, 5427, 5500, 5572, 5643, 5713, 5782, 5850, 5917, 5983, 6048, 6112, 6175, 6237, 6298, 6358, 6417, 6475, 6532, 6588, 6643, 6697, 6750, 6802, 6853, 6903, 6952, 7000, 7047, 7093, 7138, 7182, 7225, 7267, 7308, 7348, 7387, 7425, 7462, 7498, 7533, 7567, 7600, 7632, 7663, 7693, 7722, 7750, 7777, 7803, 7828, 7852, 7875, 7897, 7918, 7938, 7957, 7975, 7992, 8008, 8023, 8037, 8050, 8062, 8073, 8083, 8092, 8100, 8107, 8113, 8118, 8122, 8125, 8127};

    for(unsigned i = counter.fetch_add(1); i < 127;)
    {
        int index = startIndex[i];
        for (unsigned j = (i + 1); j < 128; ++j)
            data[index++] = Pearson128(matrix[i], matrix[j]);
    }
}

void CorrelationCoefficients256Threaded(std::array<Vector256, 256> &matrix, std::array<double, 32640>& data)
{
    std::array<unsigned, 255> startIndex = {0, 255, 509, 762, 1014, 1265, 1515, 1764, 2012, 2259, 2505, 2750, 2994, 3237, 3479, 3720, 3960, 4199, 4437, 4674, 4910, 5145, 5379, 5612, 5844, 6075, 6305, 6534, 6762, 6989, 7215, 7440, 7664, 7887, 8109, 8330, 8550, 8769, 8987, 9204, 9420, 9635, 9849, 10062, 10274, 10485, 10695, 10904, 11112, 11319, 11525, 11730, 11934, 12137, 12339, 12540, 12740, 12939, 13137, 13334, 13530, 13725, 13919, 14112, 14304, 14495, 14685, 14874, 15062, 15249, 15435, 15620, 15804, 15987, 16169, 16350, 16530, 16709, 16887, 17064, 17240, 17415, 17589, 17762, 17934, 18105, 18275, 18444, 18612, 18779, 18945, 19110, 19274, 19437, 19599, 19760, 19920, 20079, 20237, 20394, 20550, 20705, 20859, 21012, 21164, 21315, 21465, 21614, 21762, 21909, 22055, 22200, 22344, 22487, 22629, 22770, 22910, 23049, 23187, 23324, 23460, 23595, 23729, 23862, 23994, 24125, 24255, 24384, 24512, 24639, 24765, 24890, 25014, 25137, 25259, 25380, 25500, 25619, 25737, 25854, 25970, 26085, 26199, 26312, 26424, 26535, 26645, 26754, 26862, 26969, 27075, 27180, 27284, 27387, 27489, 27590, 27690, 27789, 27887, 27984, 28080, 28175, 28269, 28362, 28454, 28545, 28635, 28724, 28812, 28899, 28985, 29070, 29154, 29237, 29319, 29400, 29480, 29559, 29637, 29714, 29790, 29865, 29939, 30012, 30084, 30155, 30225, 30294, 30362, 30429, 30495, 30560, 30624, 30687, 30749, 30810, 30870, 30929, 30987, 31044, 31100, 31155, 31209, 31262, 31314, 31365, 31415, 31464, 31512, 31559, 31605, 31650, 31694, 31737, 31779, 31820, 31860, 31899, 31937, 31974, 32010, 32045, 32079, 32112, 32144, 32175, 32205, 32234, 32262, 32289, 32315, 32340, 32364, 32387, 32409, 32430, 32450, 32469, 32487, 32504, 32520, 32535, 32549, 32562, 32574, 32585, 32595, 32604, 32612, 32619, 32625, 32630, 32634, 32637, 32639};

    for(unsigned i = counter.fetch_add(1); i < 255;)
    {
        int index = startIndex[i];
        for(unsigned j = (i+1); j < 256; ++j)
        {
            data[index++] = Pearson256(matrix[i], matrix[j]);
        }
    }
}

void CorrelationCoefficients512Threaded(std::array<Vector512, 512> &matrix, std::array<double, 130816>& data)
{
    std::array<unsigned, 511> startIndex = {0, 511, 1021, 1530, 2038, 2545, 3051, 3556, 4060, 4563, 5065, 5566, 6066, 6565, 7063, 7560, 8056, 8551, 9045, 9538, 10030, 10521, 11011, 11500, 11988, 12475, 12961, 13446, 13930, 14413, 14895, 15376, 15856, 16335, 16813, 17290, 17766, 18241, 18715, 19188, 19660, 20131, 20601, 21070, 21538, 22005, 22471, 22936, 23400, 23863, 24325, 24786, 25246, 25705, 26163, 26620, 27076, 27531, 27985, 28438, 28890, 29341, 29791, 30240, 30688, 31135, 31581, 32026, 32470, 32913, 33355, 33796, 34236, 34675, 35113, 35550, 35986, 36421, 36855, 37288, 37720, 38151, 38581, 39010, 39438, 39865, 40291, 40716, 41140, 41563, 41985, 42406, 42826, 43245, 43663, 44080, 44496, 44911, 45325, 45738, 46150, 46561, 46971, 47380, 47788, 48195, 48601, 49006, 49410, 49813, 50215, 50616, 51016, 51415, 51813, 52210, 52606, 53001, 53395, 53788, 54180, 54571, 54961, 55350, 55738, 56125, 56511, 56896, 57280, 57663, 58045, 58426, 58806, 59185, 59563, 59940, 60316, 60691, 61065, 61438, 61810, 62181, 62551, 62920, 63288, 63655, 64021, 64386, 64750, 65113, 65475, 65836, 66196, 66555, 66913, 67270, 67626, 67981, 68335, 68688, 69040, 69391, 69741, 70090, 70438, 70785, 71131, 71476, 71820, 72163, 72505, 72846, 73186, 73525, 73863, 74200, 74536, 74871, 75205, 75538, 75870, 76201, 76531, 76860, 77188, 77515, 77841, 78166, 78490, 78813, 79135, 79456, 79776, 80095, 80413, 80730, 81046, 81361, 81675, 81988, 82300, 82611, 82921, 83230, 83538, 83845, 84151, 84456, 84760, 85063, 85365, 85666, 85966, 86265, 86563, 86860, 87156, 87451, 87745, 88038, 88330, 88621, 88911, 89200, 89488, 89775, 90061, 90346, 90630, 90913, 91195, 91476, 91756, 92035, 92313, 92590, 92866, 93141, 93415, 93688, 93960, 94231, 94501, 94770, 95038, 95305, 95571, 95836, 96100, 96363, 96625, 96886, 97146, 97405, 97663, 97920, 98176, 98431, 98685, 98938, 99190, 99441, 99691, 99940, 100188, 100435, 100681, 100926, 101170, 101413, 101655, 101896, 102136, 102375, 102613, 102850, 103086, 103321, 103555, 103788, 104020, 104251, 104481, 104710, 104938, 105165, 105391, 105616, 105840, 106063, 106285, 106506, 106726, 106945, 107163, 107380, 107596, 107811, 108025, 108238, 108450, 108661, 108871, 109080, 109288, 109495, 109701, 109906, 110110, 110313, 110515, 110716, 110916, 111115, 111313, 111510, 111706, 111901, 112095, 112288, 112480, 112671, 112861, 113050, 113238, 113425, 113611, 113796, 113980, 114163, 114345, 114526, 114706, 114885, 115063, 115240, 115416, 115591, 115765, 115938, 116110, 116281, 116451, 116620, 116788, 116955, 117121, 117286, 117450, 117613, 117775, 117936, 118096, 118255, 118413, 118570, 118726, 118881, 119035, 119188, 119340, 119491, 119641, 119790, 119938, 120085, 120231, 120376, 120520, 120663, 120805, 120946, 121086, 121225, 121363, 121500, 121636, 121771, 121905, 122038, 122170, 122301, 122431, 122560, 122688, 122815, 122941, 123066, 123190, 123313, 123435, 123556, 123676, 123795, 123913, 124030, 124146, 124261, 124375, 124488, 124600, 124711, 124821, 124930, 125038, 125145, 125251, 125356, 125460, 125563, 125665, 125766, 125866, 125965, 126063, 126160, 126256, 126351, 126445, 126538, 126630, 126721, 126811, 126900, 126988, 127075, 127161, 127246, 127330, 127413, 127495, 127576, 127656, 127735, 127813, 127890, 127966, 128041, 128115, 128188, 128260, 128331, 128401, 128470, 128538, 128605, 128671, 128736, 128800, 128863, 128925, 128986, 129046, 129105, 129163, 129220, 129276, 129331, 129385, 129438, 129490, 129541, 129591, 129640, 129688, 129735, 129781, 129826, 129870, 129913, 129955, 129996, 130036, 130075, 130113, 130150, 130186, 130221, 130255, 130288, 130320, 130351, 130381, 130410, 130438, 130465, 130491, 130516, 130540, 130563, 130585, 130606, 130626, 130645, 130663, 130680, 130696, 130711, 130725, 130738, 130750, 130761, 130771, 130780, 130788, 130795, 130801, 130806, 130810, 130813, 130815};

    for(unsigned i = counter.fetch_add(1); i < 511; ++i)
    {
        int index = startIndex[i];
            for(unsigned j = (i+1); j < 512; ++j)
                data[index++] = Pearson512(matrix[i], matrix[j]);
    }

}

int CorrelationCoefficients1024Threaded(std::array<Vector1024, 512> &matrix, double* data, int index)
{
    std::array<unsigned, 511> startIndex = {0, 511, 1021, 1530, 2038, 2545, 3051, 3556, 4060, 4563, 5065, 5566, 6066, 6565, 7063, 7560, 8056, 8551, 9045, 9538, 10030, 10521, 11011, 11500, 11988, 12475, 12961, 13446, 13930, 14413, 14895, 15376, 15856, 16335, 16813, 17290, 17766, 18241, 18715, 19188, 19660, 20131, 20601, 21070, 21538, 22005, 22471, 22936, 23400, 23863, 24325, 24786, 25246, 25705, 26163, 26620, 27076, 27531, 27985, 28438, 28890, 29341, 29791, 30240, 30688, 31135, 31581, 32026, 32470, 32913, 33355, 33796, 34236, 34675, 35113, 35550, 35986, 36421, 36855, 37288, 37720, 38151, 38581, 39010, 39438, 39865, 40291, 40716, 41140, 41563, 41985, 42406, 42826, 43245, 43663, 44080, 44496, 44911, 45325, 45738, 46150, 46561, 46971, 47380, 47788, 48195, 48601, 49006, 49410, 49813, 50215, 50616, 51016, 51415, 51813, 52210, 52606, 53001, 53395, 53788, 54180, 54571, 54961, 55350, 55738, 56125, 56511, 56896, 57280, 57663, 58045, 58426, 58806, 59185, 59563, 59940, 60316, 60691, 61065, 61438, 61810, 62181, 62551, 62920, 63288, 63655, 64021, 64386, 64750, 65113, 65475, 65836, 66196, 66555, 66913, 67270, 67626, 67981, 68335, 68688, 69040, 69391, 69741, 70090, 70438, 70785, 71131, 71476, 71820, 72163, 72505, 72846, 73186, 73525, 73863, 74200, 74536, 74871, 75205, 75538, 75870, 76201, 76531, 76860, 77188, 77515, 77841, 78166, 78490, 78813, 79135, 79456, 79776, 80095, 80413, 80730, 81046, 81361, 81675, 81988, 82300, 82611, 82921, 83230, 83538, 83845, 84151, 84456, 84760, 85063, 85365, 85666, 85966, 86265, 86563, 86860, 87156, 87451, 87745, 88038, 88330, 88621, 88911, 89200, 89488, 89775, 90061, 90346, 90630, 90913, 91195, 91476, 91756, 92035, 92313, 92590, 92866, 93141, 93415, 93688, 93960, 94231, 94501, 94770, 95038, 95305, 95571, 95836, 96100, 96363, 96625, 96886, 97146, 97405, 97663, 97920, 98176, 98431, 98685, 98938, 99190, 99441, 99691, 99940, 100188, 100435, 100681, 100926, 101170, 101413, 101655, 101896, 102136, 102375, 102613, 102850, 103086, 103321, 103555, 103788, 104020, 104251, 104481, 104710, 104938, 105165, 105391, 105616, 105840, 106063, 106285, 106506, 106726, 106945, 107163, 107380, 107596, 107811, 108025, 108238, 108450, 108661, 108871, 109080, 109288, 109495, 109701, 109906, 110110, 110313, 110515, 110716, 110916, 111115, 111313, 111510, 111706, 111901, 112095, 112288, 112480, 112671, 112861, 113050, 113238, 113425, 113611, 113796, 113980, 114163, 114345, 114526, 114706, 114885, 115063, 115240, 115416, 115591, 115765, 115938, 116110, 116281, 116451, 116620, 116788, 116955, 117121, 117286, 117450, 117613, 117775, 117936, 118096, 118255, 118413, 118570, 118726, 118881, 119035, 119188, 119340, 119491, 119641, 119790, 119938, 120085, 120231, 120376, 120520, 120663, 120805, 120946, 121086, 121225, 121363, 121500, 121636, 121771, 121905, 122038, 122170, 122301, 122431, 122560, 122688, 122815, 122941, 123066, 123190, 123313, 123435, 123556, 123676, 123795, 123913, 124030, 124146, 124261, 124375, 124488, 124600, 124711, 124821, 124930, 125038, 125145, 125251, 125356, 125460, 125563, 125665, 125766, 125866, 125965, 126063, 126160, 126256, 126351, 126445, 126538, 126630, 126721, 126811, 126900, 126988, 127075, 127161, 127246, 127330, 127413, 127495, 127576, 127656, 127735, 127813, 127890, 127966, 128041, 128115, 128188, 128260, 128331, 128401, 128470, 128538, 128605, 128671, 128736, 128800, 128863, 128925, 128986, 129046, 129105, 129163, 129220, 129276, 129331, 129385, 129438, 129490, 129541, 129591, 129640, 129688, 129735, 129781, 129826, 129870, 129913, 129955, 129996, 130036, 130075, 130113, 130150, 130186, 130221, 130255, 130288, 130320, 130351, 130381, 130410, 130438, 130465, 130491, 130516, 130540, 130563, 130585, 130606, 130626, 130645, 130663, 130680, 130696, 130711, 130725, 130738, 130750, 130761, 130771, 130780, 130788, 130795, 130801, 130806, 130810, 130813, 130815};

    for(unsigned i = counter.fetch_add(1); i < 511; ++i)
    {
        index += startIndex[i];
        for(unsigned j = (i+1); j < 512; ++j)
            data[index++] = Pearson1024(matrix[i], matrix[j]);
    }

    return index;
}

double Pearson128(Vector128 vec1, Vector128 vec2)
{
    double xMean = vec1.Mean();
    double yMean = vec2.Mean();

    vec1 - xMean;
    vec2 - yMean;

    double xMag = vec1.Magnitude();
    double yMag = vec2.Magnitude();

    vec1 / xMag;
    vec2 / yMag;

    double r = vec1.DotProduct(vec2);

    return std::max(std::min(r, 1.0), -1.0);
}

double Pearson256(Vector256 vec1, Vector256 vec2)
{
    double xMean = vec1.Mean();
    double yMean = vec2.Mean();

    vec1 - xMean;
    vec2 - yMean;

    double xMag = vec1.Magnitude();
    double yMag = vec2.Magnitude();

    vec1 / xMag;
    vec2 / yMag;

    double r = vec1.DotProduct(vec2);

    return std::max(std::min(r, 1.0), -1.0);
}

double Pearson512(Vector512 vec1, Vector512 vec2)
{
    double xMean = vec1.Mean();
    double yMean = vec2.Mean();

    vec1 - xMean;
    vec2 - yMean;

    double xMag = vec1.Magnitude();
    double yMag = vec2.Magnitude();

    vec1 / xMag;
    vec2 / yMag;

    double r = vec1.DotProduct(vec2);

    return std::max(std::min(r, 1.0), -1.0);
}

double Pearson1024(Vector1024 vec1, Vector1024 vec2)
{
    double xMean = vec1.Mean();
    double yMean = vec2.Mean();

    vec1 - xMean;
    vec2 - yMean;

    double xMag = vec1.Magnitude();
    double yMag = vec2.Magnitude();

    vec1 / xMag;
    vec2 / yMag;

    double r = vec1.DotProduct(vec2);

    return std::max(std::min(r, 1.0), -1.0);
}
