#include "analysis.h"


void CorrelationCoefficients128(std::array<Vector128, 128> &matrix, std::array<double, 8128>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 127; ++i)
    {
        double xMean = matrix[i].Mean();
        matrix[i] - xMean;
        double xMag = matrix[i].Magnitude();
        matrix[i] / xMag;

        for(unsigned j = (i+1); j < 128; ++j)
        {
            Vector128 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = matrix[i].DotProduct(vector);

            data[index++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients256(std::array<Vector256, 256> &matrix, std::array<double, 32640>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 255; ++i)
    {
        double xMean = matrix[i].Mean();
        matrix[i] - xMean;
        double xMag = matrix[i].Magnitude();
        matrix[i] / xMag;

        for(unsigned j = (i+1); j < 256; ++j)
        {
            Vector256 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = matrix[i].DotProduct(vector);

            data[index++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients512(std::array<Vector512, 512> &matrix, std::array<double, 130816>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 511; ++i)
    {
        double xMean = matrix[i].Mean();
        matrix[i] - xMean;
        double xMag = matrix[i].Magnitude();
        matrix[i] / xMag;

        for(unsigned j = (i+1); j < 512; ++j)
        {
            Vector512 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = matrix[i].DotProduct(vector);

            data[index++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients1024(Vector1024* matrix, std::array<double, 523776>& data)
{
    int index = 0;
    for(unsigned i = 0; i < 1023; ++i)
    {
        double xMean = matrix[i].Mean();
        matrix[i] - xMean;
        double xMag = matrix[i].Magnitude();
        matrix[i] / xMag;

        for(unsigned j = (i+1); j < 1024; ++j)
        {
            Vector1024 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = matrix[i].DotProduct(vector);

            data[index++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients128Threaded(std::array<Vector128, 128> &matrix, std::array<double, 8128>& data, int startPoint, int endPoint)
{
    std::array<unsigned, 127> startIndex = {0, 127, 253, 378, 502, 625, 747, 868, 988, 1107, 1225, 1342, 1458, 1573, 1687, 1800, 1912, 2023, 2133, 2242, 2350, 2457, 2563, 2668, 2772, 2875, 2977, 3078, 3178, 3277, 3375, 3472, 3568, 3663, 3757, 3850, 3942, 4033, 4123, 4212, 4300, 4387, 4473, 4558, 4642, 4725, 4807, 4888, 4968, 5047, 5125, 5202, 5278, 5353, 5427, 5500, 5572, 5643, 5713, 5782, 5850, 5917, 5983, 6048, 6112, 6175, 6237, 6298, 6358, 6417, 6475, 6532, 6588, 6643, 6697, 6750, 6802, 6853, 6903, 6952, 7000, 7047, 7093, 7138, 7182, 7225, 7267, 7308, 7348, 7387, 7425, 7462, 7498, 7533, 7567, 7600, 7632, 7663, 7693, 7722, 7750, 7777, 7803, 7828, 7852, 7875, 7897, 7918, 7938, 7957, 7975, 7992, 8008, 8023, 8037, 8050, 8062, 8073, 8083, 8092, 8100, 8107, 8113, 8118, 8122, 8125, 8127};

    for(unsigned i = startPoint; i < endPoint; ++i)
    {
        Vector128 vec = matrix[i];

        double xMean = vec.Mean();
        vec - xMean;
        double xMag = vec.Magnitude();
        vec / xMag;

        for(unsigned j = (i+1); j < 128; ++j)
        {
            Vector128 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = vec.DotProduct(vector);

            data[startIndex[i]++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients256Threaded(std::array<Vector256, 256> &matrix, std::array<double, 32640>& data, int startPoint, int endPoint)
{
    std::array<unsigned, 255> startIndex = {0, 255, 509, 762, 1014, 1265, 1515, 1764, 2012, 2259, 2505, 2750, 2994, 3237, 3479, 3720, 3960, 4199, 4437, 4674, 4910, 5145, 5379, 5612, 5844, 6075, 6305, 6534, 6762, 6989, 7215, 7440, 7664, 7887, 8109, 8330, 8550, 8769, 8987, 9204, 9420, 9635, 9849, 10062, 10274, 10485, 10695, 10904, 11112, 11319, 11525, 11730, 11934, 12137, 12339, 12540, 12740, 12939, 13137, 13334, 13530, 13725, 13919, 14112, 14304, 14495, 14685, 14874, 15062, 15249, 15435, 15620, 15804, 15987, 16169, 16350, 16530, 16709, 16887, 17064, 17240, 17415, 17589, 17762, 17934, 18105, 18275, 18444, 18612, 18779, 18945, 19110, 19274, 19437, 19599, 19760, 19920, 20079, 20237, 20394, 20550, 20705, 20859, 21012, 21164, 21315, 21465, 21614, 21762, 21909, 22055, 22200, 22344, 22487, 22629, 22770, 22910, 23049, 23187, 23324, 23460, 23595, 23729, 23862, 23994, 24125, 24255, 24384, 24512, 24639, 24765, 24890, 25014, 25137, 25259, 25380, 25500, 25619, 25737, 25854, 25970, 26085, 26199, 26312, 26424, 26535, 26645, 26754, 26862, 26969, 27075, 27180, 27284, 27387, 27489, 27590, 27690, 27789, 27887, 27984, 28080, 28175, 28269, 28362, 28454, 28545, 28635, 28724, 28812, 28899, 28985, 29070, 29154, 29237, 29319, 29400, 29480, 29559, 29637, 29714, 29790, 29865, 29939, 30012, 30084, 30155, 30225, 30294, 30362, 30429, 30495, 30560, 30624, 30687, 30749, 30810, 30870, 30929, 30987, 31044, 31100, 31155, 31209, 31262, 31314, 31365, 31415, 31464, 31512, 31559, 31605, 31650, 31694, 31737, 31779, 31820, 31860, 31899, 31937, 31974, 32010, 32045, 32079, 32112, 32144, 32175, 32205, 32234, 32262, 32289, 32315, 32340, 32364, 32387, 32409, 32430, 32450, 32469, 32487, 32504, 32520, 32535, 32549, 32562, 32574, 32585, 32595, 32604, 32612, 32619, 32625, 32630, 32634, 32637, 32639};

    for(unsigned i = startPoint; i < endPoint; ++i)
    {
        Vector256 vec = matrix[i];

        double xMean = vec.Mean();
        vec - xMean;
        double xMag = vec.Magnitude();
        vec / xMag;

        for(unsigned j = (i+1); j < 256; ++j)
        {
            Vector256 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = vec.DotProduct(vector);

            data[startIndex[i]++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients512Threaded(std::array<Vector512, 512> &matrix, std::array<double, 130816>& data, int startPoint, int endPoint)
{
    std::array<unsigned, 511> startIndex = {0, 511, 1021, 1530, 2038, 2545, 3051, 3556, 4060, 4563, 5065, 5566, 6066, 6565, 7063, 7560, 8056, 8551, 9045, 9538, 10030, 10521, 11011, 11500, 11988, 12475, 12961, 13446, 13930, 14413, 14895, 15376, 15856, 16335, 16813, 17290, 17766, 18241, 18715, 19188, 19660, 20131, 20601, 21070, 21538, 22005, 22471, 22936, 23400, 23863, 24325, 24786, 25246, 25705, 26163, 26620, 27076, 27531, 27985, 28438, 28890, 29341, 29791, 30240, 30688, 31135, 31581, 32026, 32470, 32913, 33355, 33796, 34236, 34675, 35113, 35550, 35986, 36421, 36855, 37288, 37720, 38151, 38581, 39010, 39438, 39865, 40291, 40716, 41140, 41563, 41985, 42406, 42826, 43245, 43663, 44080, 44496, 44911, 45325, 45738, 46150, 46561, 46971, 47380, 47788, 48195, 48601, 49006, 49410, 49813, 50215, 50616, 51016, 51415, 51813, 52210, 52606, 53001, 53395, 53788, 54180, 54571, 54961, 55350, 55738, 56125, 56511, 56896, 57280, 57663, 58045, 58426, 58806, 59185, 59563, 59940, 60316, 60691, 61065, 61438, 61810, 62181, 62551, 62920, 63288, 63655, 64021, 64386, 64750, 65113, 65475, 65836, 66196, 66555, 66913, 67270, 67626, 67981, 68335, 68688, 69040, 69391, 69741, 70090, 70438, 70785, 71131, 71476, 71820, 72163, 72505, 72846, 73186, 73525, 73863, 74200, 74536, 74871, 75205, 75538, 75870, 76201, 76531, 76860, 77188, 77515, 77841, 78166, 78490, 78813, 79135, 79456, 79776, 80095, 80413, 80730, 81046, 81361, 81675, 81988, 82300, 82611, 82921, 83230, 83538, 83845, 84151, 84456, 84760, 85063, 85365, 85666, 85966, 86265, 86563, 86860, 87156, 87451, 87745, 88038, 88330, 88621, 88911, 89200, 89488, 89775, 90061, 90346, 90630, 90913, 91195, 91476, 91756, 92035, 92313, 92590, 92866, 93141, 93415, 93688, 93960, 94231, 94501, 94770, 95038, 95305, 95571, 95836, 96100, 96363, 96625, 96886, 97146, 97405, 97663, 97920, 98176, 98431, 98685, 98938, 99190, 99441, 99691, 99940, 100188, 100435, 100681, 100926, 101170, 101413, 101655, 101896, 102136, 102375, 102613, 102850, 103086, 103321, 103555, 103788, 104020, 104251, 104481, 104710, 104938, 105165, 105391, 105616, 105840, 106063, 106285, 106506, 106726, 106945, 107163, 107380, 107596, 107811, 108025, 108238, 108450, 108661, 108871, 109080, 109288, 109495, 109701, 109906, 110110, 110313, 110515, 110716, 110916, 111115, 111313, 111510, 111706, 111901, 112095, 112288, 112480, 112671, 112861, 113050, 113238, 113425, 113611, 113796, 113980, 114163, 114345, 114526, 114706, 114885, 115063, 115240, 115416, 115591, 115765, 115938, 116110, 116281, 116451, 116620, 116788, 116955, 117121, 117286, 117450, 117613, 117775, 117936, 118096, 118255, 118413, 118570, 118726, 118881, 119035, 119188, 119340, 119491, 119641, 119790, 119938, 120085, 120231, 120376, 120520, 120663, 120805, 120946, 121086, 121225, 121363, 121500, 121636, 121771, 121905, 122038, 122170, 122301, 122431, 122560, 122688, 122815, 122941, 123066, 123190, 123313, 123435, 123556, 123676, 123795, 123913, 124030, 124146, 124261, 124375, 124488, 124600, 124711, 124821, 124930, 125038, 125145, 125251, 125356, 125460, 125563, 125665, 125766, 125866, 125965, 126063, 126160, 126256, 126351, 126445, 126538, 126630, 126721, 126811, 126900, 126988, 127075, 127161, 127246, 127330, 127413, 127495, 127576, 127656, 127735, 127813, 127890, 127966, 128041, 128115, 128188, 128260, 128331, 128401, 128470, 128538, 128605, 128671, 128736, 128800, 128863, 128925, 128986, 129046, 129105, 129163, 129220, 129276, 129331, 129385, 129438, 129490, 129541, 129591, 129640, 129688, 129735, 129781, 129826, 129870, 129913, 129955, 129996, 130036, 130075, 130113, 130150, 130186, 130221, 130255, 130288, 130320, 130351, 130381, 130410, 130438, 130465, 130491, 130516, 130540, 130563, 130585, 130606, 130626, 130645, 130663, 130680, 130696, 130711, 130725, 130738, 130750, 130761, 130771, 130780, 130788, 130795, 130801, 130806, 130810, 130813, 130815};

    for(unsigned i = startPoint; i < endPoint; ++i)
    {
        Vector512 vec = matrix[i];

        double xMean = vec.Mean();
        vec - xMean;
        double xMag = vec.Magnitude();
        vec / xMag;

        for(unsigned j = (i+1); j < 512; ++j)
        {
            Vector512 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = vec.DotProduct(vector);

            data[startIndex[i]++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}

void CorrelationCoefficients1024Threaded(Vector1024* matrix, std::array<double, 523776>& data, int startPoint, int endPoint)
{
    std::array<unsigned, 1023> startIndex = {0, 1023, 2045, 3066, 4086, 5105, 6123, 7140, 8156, 9171, 10185, 11198, 12210, 13221, 14231, 15240, 16248, 17255, 18261, 19266, 20270, 21273, 22275, 23276, 24276, 25275, 26273, 27270, 28266, 29261, 30255, 31248, 32240, 33231, 34221, 35210, 36198, 37185, 38171, 39156, 40140, 41123, 42105, 43086, 44066, 45045, 46023, 47000, 47976, 48951, 49925, 50898, 51870, 52841, 53811, 54780, 55748, 56715, 57681, 58646, 59610, 60573, 61535, 62496, 63456, 64415, 65373, 66330, 67286, 68241, 69195, 70148, 71100, 72051, 73001, 73950, 74898, 75845, 76791, 77736, 78680, 79623, 80565, 81506, 82446, 83385, 84323, 85260, 86196, 87131, 88065, 88998, 89930, 90861, 91791, 92720, 93648, 94575, 95501, 96426, 97350, 98273, 99195, 100116, 101036, 101955, 102873, 103790, 104706, 105621, 106535, 107448, 108360, 109271, 110181, 111090, 111998, 112905, 113811, 114716, 115620, 116523, 117425, 118326, 119226, 120125, 121023, 121920, 122816, 123711, 124605, 125498, 126390, 127281, 128171, 129060, 129948, 130835, 131721, 132606, 133490, 134373, 135255, 136136, 137016, 137895, 138773, 139650, 140526, 141401, 142275, 143148, 144020, 144891, 145761, 146630, 147498, 148365, 149231, 150096, 150960, 151823, 152685, 153546, 154406, 155265, 156123, 156980, 157836, 158691, 159545, 160398, 161250, 162101, 162951, 163800, 164648, 165495, 166341, 167186, 168030, 168873, 169715, 170556, 171396, 172235, 173073, 173910, 174746, 175581, 176415, 177248, 178080, 178911, 179741, 180570, 181398, 182225, 183051, 183876, 184700, 185523, 186345, 187166, 187986, 188805, 189623, 190440, 191256, 192071, 192885, 193698, 194510, 195321, 196131, 196940, 197748, 198555, 199361, 200166, 200970, 201773, 202575, 203376, 204176, 204975, 205773, 206570, 207366, 208161, 208955, 209748, 210540, 211331, 212121, 212910, 213698, 214485, 215271, 216056, 216840, 217623, 218405, 219186, 219966, 220745, 221523, 222300, 223076, 223851, 224625, 225398, 226170, 226941, 227711, 228480, 229248, 230015, 230781, 231546, 232310, 233073, 233835, 234596, 235356, 236115, 236873, 237630, 238386, 239141, 239895, 240648, 241400, 242151, 242901, 243650, 244398, 245145, 245891, 246636, 247380, 248123, 248865, 249606, 250346, 251085, 251823, 252560, 253296, 254031, 254765, 255498, 256230, 256961, 257691, 258420, 259148, 259875, 260601, 261326, 262050, 262773, 263495, 264216, 264936, 265655, 266373, 267090, 267806, 268521, 269235, 269948, 270660, 271371, 272081, 272790, 273498, 274205, 274911, 275616, 276320, 277023, 277725, 278426, 279126, 279825, 280523, 281220, 281916, 282611, 283305, 283998, 284690, 285381, 286071, 286760, 287448, 288135, 288821, 289506, 290190, 290873, 291555, 292236, 292916, 293595, 294273, 294950, 295626, 296301, 296975, 297648, 298320, 298991, 299661, 300330, 300998, 301665, 302331, 302996, 303660, 304323, 304985, 305646, 306306, 306965, 307623, 308280, 308936, 309591, 310245, 310898, 311550, 312201, 312851, 313500, 314148, 314795, 315441, 316086, 316730, 317373, 318015, 318656, 319296, 319935, 320573, 321210, 321846, 322481, 323115, 323748, 324380, 325011, 325641, 326270, 326898, 327525, 328151, 328776, 329400, 330023, 330645, 331266, 331886, 332505, 333123, 333740, 334356, 334971, 335585, 336198, 336810, 337421, 338031, 338640, 339248, 339855, 340461, 341066, 341670, 342273, 342875, 343476, 344076, 344675, 345273, 345870, 346466, 347061, 347655, 348248, 348840, 349431, 350021, 350610, 351198, 351785, 352371, 352956, 353540, 354123, 354705, 355286, 355866, 356445, 357023, 357600, 358176, 358751, 359325, 359898, 360470, 361041, 361611, 362180, 362748, 363315, 363881, 364446, 365010, 365573, 366135, 366696, 367256, 367815, 368373, 368930, 369486, 370041, 370595, 371148, 371700, 372251, 372801, 373350, 373898, 374445, 374991, 375536, 376080, 376623, 377165, 377706, 378246, 378785, 379323, 379860, 380396, 380931, 381465, 381998, 382530, 383061, 383591, 384120, 384648, 385175, 385701, 386226, 386750, 387273, 387795, 388316, 388836, 389355, 389873, 390390, 390906, 391421, 391935, 392448, 392960, 393471, 393981, 394490, 394998, 395505, 396011, 396516, 397020, 397523, 398025, 398526, 399026, 399525, 400023, 400520, 401016, 401511, 402005, 402498, 402990, 403481, 403971, 404460, 404948, 405435, 405921, 406406, 406890, 407373, 407855, 408336, 408816, 409295, 409773, 410250, 410726, 411201, 411675, 412148, 412620, 413091, 413561, 414030, 414498, 414965, 415431, 415896, 416360, 416823, 417285, 417746, 418206, 418665, 419123, 419580, 420036, 420491, 420945, 421398, 421850, 422301, 422751, 423200, 423648, 424095, 424541, 424986, 425430, 425873, 426315, 426756, 427196, 427635, 428073, 428510, 428946, 429381, 429815, 430248, 430680, 431111, 431541, 431970, 432398, 432825, 433251, 433676, 434100, 434523, 434945, 435366, 435786, 436205, 436623, 437040, 437456, 437871, 438285, 438698, 439110, 439521, 439931, 440340, 440748, 441155, 441561, 441966, 442370, 442773, 443175, 443576, 443976, 444375, 444773, 445170, 445566, 445961, 446355, 446748, 447140, 447531, 447921, 448310, 448698, 449085, 449471, 449856, 450240, 450623, 451005, 451386, 451766, 452145, 452523, 452900, 453276, 453651, 454025, 454398, 454770, 455141, 455511, 455880, 456248, 456615, 456981, 457346, 457710, 458073, 458435, 458796, 459156, 459515, 459873, 460230, 460586, 460941, 461295, 461648, 462000, 462351, 462701, 463050, 463398, 463745, 464091, 464436, 464780, 465123, 465465, 465806, 466146, 466485, 466823, 467160, 467496, 467831, 468165, 468498, 468830, 469161, 469491, 469820, 470148, 470475, 470801, 471126, 471450, 471773, 472095, 472416, 472736, 473055, 473373, 473690, 474006, 474321, 474635, 474948, 475260, 475571, 475881, 476190, 476498, 476805, 477111, 477416, 477720, 478023, 478325, 478626, 478926, 479225, 479523, 479820, 480116, 480411, 480705, 480998, 481290, 481581, 481871, 482160, 482448, 482735, 483021, 483306, 483590, 483873, 484155, 484436, 484716, 484995, 485273, 485550, 485826, 486101, 486375, 486648, 486920, 487191, 487461, 487730, 487998, 488265, 488531, 488796, 489060, 489323, 489585, 489846, 490106, 490365, 490623, 490880, 491136, 491391, 491645, 491898, 492150, 492401, 492651, 492900, 493148, 493395, 493641, 493886, 494130, 494373, 494615, 494856, 495096, 495335, 495573, 495810, 496046, 496281, 496515, 496748, 496980, 497211, 497441, 497670, 497898, 498125, 498351, 498576, 498800, 499023, 499245, 499466, 499686, 499905, 500123, 500340, 500556, 500771, 500985, 501198, 501410, 501621, 501831, 502040, 502248, 502455, 502661, 502866, 503070, 503273, 503475, 503676, 503876, 504075, 504273, 504470, 504666, 504861, 505055, 505248, 505440, 505631, 505821, 506010, 506198, 506385, 506571, 506756, 506940, 507123, 507305, 507486, 507666, 507845, 508023, 508200, 508376, 508551, 508725, 508898, 509070, 509241, 509411, 509580, 509748, 509915, 510081, 510246, 510410, 510573, 510735, 510896, 511056, 511215, 511373, 511530, 511686, 511841, 511995, 512148, 512300, 512451, 512601, 512750, 512898, 513045, 513191, 513336, 513480, 513623, 513765, 513906, 514046, 514185, 514323, 514460, 514596, 514731, 514865, 514998, 515130, 515261, 515391, 515520, 515648, 515775, 515901, 516026, 516150, 516273, 516395, 516516, 516636, 516755, 516873, 516990, 517106, 517221, 517335, 517448, 517560, 517671, 517781, 517890, 517998, 518105, 518211, 518316, 518420, 518523, 518625, 518726, 518826, 518925, 519023, 519120, 519216, 519311, 519405, 519498, 519590, 519681, 519771, 519860, 519948, 520035, 520121, 520206, 520290, 520373, 520455, 520536, 520616, 520695, 520773, 520850, 520926, 521001, 521075, 521148, 521220, 521291, 521361, 521430, 521498, 521565, 521631, 521696, 521760, 521823, 521885, 521946, 522006, 522065, 522123, 522180, 522236, 522291, 522345, 522398, 522450, 522501, 522551, 522600, 522648, 522695, 522741, 522786, 522830, 522873, 522915, 522956, 522996, 523035, 523073, 523110, 523146, 523181, 523215, 523248, 523280, 523311, 523341, 523370, 523398, 523425, 523451, 523476, 523500, 523523, 523545, 523566, 523586, 523605, 523623, 523640, 523656, 523671, 523685, 523698, 523710, 523721, 523731, 523740, 523748, 523755, 523761, 523766, 523770, 523773, 523775};

    for(int i = startPoint; i < endPoint; ++i)
    {
        Vector1024 vec = matrix[i];

        double xMean = vec.Mean();
        vec - xMean;
        double xMag = vec.Magnitude();
        vec / xMag;

        for(unsigned j = (i+1); j < 1024; ++j)
        {
            Vector1024 vector = matrix[j];
            double yMean = vector.Mean();
            vector - yMean;
            double yMag = vector.Magnitude();
            vector / yMag;

            double r = vec.DotProduct(vector);


            data[startIndex[i]++] = std::max(std::min(r, 1.0), -1.0);
        }
    }
}
